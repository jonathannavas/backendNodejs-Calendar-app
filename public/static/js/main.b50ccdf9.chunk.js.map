{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","handleSubmitLogin","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","handleSubmitRegister","className","onSubmit","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","handleSubmitForm","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","onDoubleClickEvent","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b50ccdf9.chunk.js","sourcesContent":["export const types = {\r\n\r\n    //TODO: AQUI SE GUARDAN TODOS LOS TIPOS OJITO CON ESO\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventAddNew: '[event] Add new',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinished: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n//     uid: null,\r\n//     name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin: \r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinished:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n// const initialState = {\r\n//     events: [{\r\n//         id: new Date().getTime(),\r\n//         title: 'Cumpleaños del jefe',\r\n//         start: moment().toDate(),\r\n//         end: moment().add(2, 'hours').toDate(),\r\n//         bgcolor: '#fafafa',\r\n//         notes: 'Comprar el paste',\r\n//         user: {\r\n//             _id: '123123',\r\n//             name: 'Jonathan'\r\n//         }\r\n//     }],\r\n//     activeEvent: null\r\n// };\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    // TODO: Aqui se hace el switch de los types\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id===action.payload.id) \r\n                        ? action.payload \r\n                        : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => e.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { types } from \"../types/types\";\r\nconst initialState = {\r\n    modalOpen:false\r\n};\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    // TODO: Aqui se hace el switch de los types\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n// TODO: Aqui se combina los reducers \r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n// TODO Aqui se configura el store con el thunk para que funcione correcta mente el REDUX TOOL\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method='GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method='GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map(\r\n        (event) => ({\r\n            ...event,\r\n            end: moment(event.end).toDate(),\r\n            start: moment(event.start).toDate()\r\n        })\r\n    );\r\n}","\r\n// TODO Aqui van las acciones de los eventos que seran sincronos\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState)=> {\r\n        const { uid, name } = getState().auth;\r\n     \r\n      try {\r\n        const resp = await fetchWithToken('events', event, 'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            event.id = body.event.id;\r\n            event.user = {\r\n                _id: uid,\r\n                name: name\r\n            };\r\n            dispatch( eventAddNew(event) );\r\n        }\r\n      } catch (error) {\r\n        console.log(error);  \r\n      }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n                Swal.fire('Success', 'Your event has been updated', 'success');\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n} \r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n                Swal.fire('Success', 'Your event has been deleted', 'success');\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents( body.events );\r\n            dispatch(eventLoaded(events));\r\n     \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        \r\n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            \r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( { \r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchWithoutToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            \r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( { \r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n\r\n            Swal.fire('Success', 'User register', 'success');\r\n\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            \r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( { \r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n\r\n        }else{\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinished\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () =>{\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() )\r\n        dispatch( logout() )\r\n    }\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});\r\n\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'jonathan.navas9@hotmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Gabo',\r\n        rEmail: 'gabo.navas9@hotmail.com',\r\n        rPassword1: '1234567',\r\n        rPassword2: '1234567',\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const {  rEmail, rName, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleSubmitLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword )  );\r\n    }\r\n\r\n    const handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Both password must be the same', 'error');\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleSubmitLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                                onSubmit={ handleSubmitLogin }\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleSubmitRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={ handleRegisterInputChange }\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" \r\n                                onSubmit={handleSubmitRegister}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> -{ user.name }-</span>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\n// TODO Aqui van las acciones del UI\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    // TODO: Se usa el useSelector para traer informacion del Store\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    // TODO: Para hacer acciones se usa el hook useDispatch\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    //TODO: Cada vez que cambie cambie un evento se selecciona y se carga su informacion.\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        //TODO: DEBE CERRAR EL MODAL\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n    \r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire('Error', 'La fecha de fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //TODO: Guardar en BDD\r\n\r\n        if(activeEvent){\r\n            dispatch( eventStartUpdate(formValues) );\r\n        }else{\r\n            dispatch( eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar Evento' : 'Crear evento' }</h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                        format=\"dd-MM-y h:mm a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                        format=\"dd-MM-y h:mm a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                    onSubmit={handleSubmitForm}\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n      </Modal>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() ); \r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={ handleClickNew }>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete(activeEvent) );\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es'; \r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    // TODO: Para hacer acciones se usa el hook useDispatch\r\n    const dispatch = useDispatch();\r\n\r\n    //TODO: Leer los eventos del store\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelecEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style={\r\n            backgroundColor: ( uid === event.user._id) ? '#367CF7' : '#365660' ,\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return{\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                onDoubleClickEvent={onDoubleClick}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onSelectEvent={ onSelecEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <AddNewFab />\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport  PropTypes  from 'prop-types';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => ( \r\n                (isAuthenticated)\r\n                    ? (<Component { ...props } />)\r\n                    : (<Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport  PropTypes  from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => ( \r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component { ...props } />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../../actions/auth\";\r\nimport { LoginScreen } from \"../auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if(checking){\r\n        return (<h5>Wait...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={ LoginScreen } isAuthenticated={ !!uid } />\r\n                    <PrivateRoute exact path=\"/\" component={ CalendarScreen } isAuthenticated={ !!uid } />\r\n                    <Redirect to=\"/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport {store} from './store/store';\r\nimport { AppRouter } from './components/routers/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles.css';\r\n\r\nReactDOM.render( <CalendarApp />  , document.getElementById('root'));"],"sourceRoot":""}